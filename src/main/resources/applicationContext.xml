<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    spring的配置文件，主要配置与业务逻辑有关的内容-->

<!--    让spring不扫描控制器-->
    <context:component-scan base-package="com.martin">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    数据源，事务控制，.....-->
    <!--    引入外部的文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

<!--    =======================================mybatis整合====================================================================-->
<!--    配置和mybatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        指定mybatis的全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
<!--        指定数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
<!--        指定mybatis的mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

<!--    配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        扫描*.dao包下的所有dao接口的实现加入到ioc容器中-->
        <property name="basePackage" value="com.martin.crud.dao"></property>
    </bean>

<!--    配置一个可以执行批量的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
<!--    ====================================================================================================================-->


<!--    =======================================事务控制===================================================================-->
<!--    事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        控制住数据源，数据源中的回滚等事务用事务管理器做-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

<!--    开启基于注解的事务，也可以使用xml配置形式的事务（比较重要的都是使用配置好式）-->
<!--    需要aop名称空间-->
    <aop:config>
<!--        切入点表达式((权限控制符如public（可省略）)返回值类型（*代表所有）com.*(包)类.方法)下面这个是所有返回值类型包下的所有类所有方法（双点表示子包也可以，参数任意多）-->
        <aop:pointcut id="txPoint" expression="execution( * com.martin.crud.service..*(..))"/>
<!--        配置事务增强（需要引入名词空间）（切入规则和切入点)-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>

<!--    配置事务增强，事务如何切入（下面transaction-manager默认取值与上面事务bean的起名相同，可以省略）-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <tx:advice id="txAdvice">
        <tx:attributes>
<!--            *代表所有方法都是事务-->
            <tx:method name="*"/>
<!--            以get开始的所有的方法-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>

    </tx:advice>

</beans>